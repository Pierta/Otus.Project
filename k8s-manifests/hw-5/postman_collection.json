{
	"info": {
		"_postman_id": "241a5765-ce7a-4788-89b6-87516f91b149",
		"name": "Otus.Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth API",
			"item": [
				{
					"name": "Generate random variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObj = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"email\", jsonObj.data.email)\r",
									"pm.collectionVariables.set(\"password\", jsonObj.data.password)\r",
									"pm.collectionVariables.set(\"email2\", jsonObj.data.email2)\r",
									"pm.collectionVariables.set(\"password2\", jsonObj.data.password2)\r",
									"\r",
									"console.log('Response:', jsonObj.data)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{$guid}}@{{$randomColor}}.com\",\r\n    \"password\": \"{{$guid}}\",\r\n    \"email2\": \"{{$guid}}@{{$randomColor}}.com\",\r\n    \"password2\": \"{{$guid}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObj = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"user_id\", jsonObj.id)\r",
									"\r",
									"console.log('Request:', pm.request.body.raw)\r",
									"console.log('Response:', jsonObj.id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"firstName\": \"some\",\r\n    \"lastName\": \"bla\",\r\n    \"middleName\": \"man\",\r\n    \"cellPhone\": \"111-222-3333\",\r\n    \"isEmailNotificationEnabled\": true    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by id (non-auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request is non authorized with a status code of 401\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/secure/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"secure",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request is successful with a status code of 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonObj = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"token\", jsonObj.token)\r",
									"\r",
									"console.log('Request:', pm.request.body.raw)\r",
									"console.log('Response:', jsonObj.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('Response:', responseBody)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('Request:', pm.request.body.raw)\r",
									"console.log('Response:', responseBody)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"createdDate\": \"2021-12-10T11:25:52.623Z\",\r\n    \"updatedDate\": \"2021-12-10T11:25:52.623Z\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",    \r\n    \"firstName\": \"{{new_firstName}}\",\r\n    \"lastName\": \"bla\",\r\n    \"middleName\": \"man\",\r\n    \"cellPhone\": \"111-222-3333\",\r\n    \"isEmailNotificationEnabled\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/secure/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"secure",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by id (auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request is successful with a status code of 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check that it returns a new first name\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.firstName).equals(pm.collectionVariables.get(\"new_firstName\"));\r",
									"});\r",
									"\r",
									"console.log('Response:', JSON.parse(responseBody))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/secure/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"secure",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register 2nd user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('Request:', pm.request.body.raw)\r",
									"console.log('Response:', responseBody)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email2}}\",\r\n    \"password\": \"{{password2}}\",\r\n    \"firstName\": \"some2\",\r\n    \"lastName\": \"bla2\",\r\n    \"middleName\": \"man2\",\r\n    \"cellPhone\": \"222-333-4444\",\r\n    \"isEmailNotificationEnabled\": true    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login 2nd user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObj = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"token\", jsonObj.token)\r",
									"\r",
									"console.log('Request:', pm.request.body.raw)\r",
									"console.log('Response:', jsonObj.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email2}}\",\r\n    \"password\": \"{{password2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User1 by id (auth) with token for User2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request is forbidden with a status code of 403\", function () {\r",
									"  pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/secure/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"secure",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://arch.homework"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "email",
			"value": "some@example.com"
		},
		{
			"key": "password",
			"value": "123"
		},
		{
			"key": "new_firstName",
			"value": "another"
		},
		{
			"key": "email2",
			"value": "some2@example.com"
		},
		{
			"key": "password2",
			"value": "321"
		}
	]
}